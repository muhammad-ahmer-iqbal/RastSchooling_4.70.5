@model FormModel

<div class="card-body">
    @await Html.PartialAsync("Table", new DataTablesModel
    {
        Name = "form-field-grid",
        UrlRead = new DataUrl("FormFieldList", "Form", new RouteValueDictionary { [nameof(Model.FormFieldSearchModel.FormId)] = Model.Id }),
        UrlDelete = new DataUrl("FormFieldDelete", "Student", null),
        Length = Model.FormFieldSearchModel.PageSize,
        LengthMenu = Model.FormFieldSearchModel.AvailablePageSizes,
        ColumnCollection = new List<ColumnProperty>
        {
        new ColumnProperty(nameof(FormFieldModel.Name))
        {
        Title = T("Admin.Forms.FormFieldModel.Field.Name").Text,
        },
        new ColumnProperty(nameof(FormFieldModel.DisplayOrder))
        {
        Title = T("Admin.Forms.FormFieldModel.Field.DisplayOrder").Text,
        },
        new ColumnProperty(nameof(FormFieldModel.Required))
        {
        Title = T("Admin.Forms.FormFieldModel.Field.Required").Text,
        },
        new ColumnProperty(nameof(FormFieldModel.ControlTypeString))
        {
        Title = T("Admin.Forms.FormFieldModel.Field.ControlTypeId").Text,
        },
        new ColumnProperty(nameof(FormFieldModel.Options))
        {
        Title = T("Admin.Forms.FormFieldModel.Field.Options").Text,
        Encode = false
        },
    new ColumnProperty(nameof(FormFieldModel.Id))
        {
        Title = T("Admin.Common.Delete").Text,
        Width = "100",
        Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
        ClassName = NopColumnClassDefaults.Button
        }
        }
    })

    <div class="card card-default">
        <div class="card-header">
            @T("Admin.Forms.FormFieldModel.AddNew")
        </div>
        <div class="card-body" id="form-field-card">
            
        </div>
        <div class="card-footer">
            <div class="row">
                <button type="button" id="btnAddUpdateFormField" class="btn btn-primary offset-md-3">
                    @T("admin.common.addnew")
                </button>
            </div>
        </div>
        <script>
            function AddUpdateFormField(){
                var postData = {
                    formId: @Model.Id,
                };

                $.ajax({
                    type: "GET",
                    url: "@Url.Action("FormFieldAddUpdate", "Form")",
                    data: postData,
                    success: function (data, textStatus, jqXHR) {
                        if(data.success) {
                            $('#form-field-card').html(data.model.html);
                        }
                        else {
                            alert(data.error)
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        // Handle error
                    },
                    complete: function (jqXHR, textStatus) {
                        
                    }
                });
            }

            $(document).ready(AddUpdateFormField);

            $(document).on('click', '#btnAddUpdateFormField' ,function(){
                @*var startDate = $('#@Html.IdFor(model => model.StudentLeaveModel.StartDate)');
                var endDate = $('#@Html.IdFor(model => model.StudentLeaveModel.EndDate)');
                if (startDate.val() === ''
                    || endDate.val() === '')
                {
                    if(startDate.val() === '')
                    {
                        $("span[data-valmsg-for='@Html.NameFor(model => model.StudentLeaveModel.StartDate)']").text("This is required.");
                        $("span[data-valmsg-for='@Html.NameFor(model => model.StudentLeaveModel.StartDate)']").addClass("field-validation-error");

                    }
                    if(endDate.val() === '')
                    {
                        $("span[data-valmsg-for='@Html.NameFor(model => model.StudentLeaveModel.EndDate)']").text("This is required.");
                        $("span[data-valmsg-for='@Html.NameFor(model => model.StudentLeaveModel.EndDate)']").addClass("field-validation-error");
                    }

                    return;
                }*@


                $('#btnAddUpdateFormField').attr('disabled', true);

                var postData = {
                    StartDate: startDate.val(),
                    EndDate: endDate.val(),
                    CustomerId: @Model.Id
                };

                addAntiForgeryToken(postData);

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("FormFieldAddUpdate", "Form")",
                    data: postData,
                    success: function (data, textStatus, jqXHR) {
                        if(data.success)
                        {
                            updateTable('#student-leave-grid');

                            startDate.val('');
                            endDate.val('');
                        }
                        else
                        {
                            alert(data.error);
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        // Handle error
                    },
                    complete: function (jqXHR, textStatus) {
                        $('#btnAddUpdateFormField').attr('disabled', false);
                    }
                });
            })
        </script>
    </div>
</div>

