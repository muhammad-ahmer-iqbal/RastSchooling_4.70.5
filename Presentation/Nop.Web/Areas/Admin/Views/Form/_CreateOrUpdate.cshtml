@model FormModel

@{
	var customer = await workContext.GetCurrentCustomerAsync();
	const string hideInfoBlockAttributeName = "FormPage.HideInfoBlock";
	var hideInfoBlock = await genericAttributeService.GetAttributeAsync<bool>(customer, hideInfoBlockAttributeName);

	const string hideFormFieldInfoBlockAttributeName = "FormPage.HideFormFieldInfoBlock";
	var hideFormFieldInfoBlock = await genericAttributeService.GetAttributeAsync<bool>(customer, hideFormFieldInfoBlockAttributeName);
}

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<section class="content">
	<div class="container-fluid">
		<div class="form-horizontal">
			<nop-cards id="form-cards">
				<nop-card asp-name="form-info"
						  asp-icon="fas fa-info"
						  asp-title="@T("Admin.Common.Info")"
						  asp-hide-block-attribute-name="@hideInfoBlockAttributeName"
						  asp-hide="@hideInfoBlock"
						  asp-advanced="false">
					@await Html.PartialAsync("_CreateOrUpdate.Info", Model)
				</nop-card>

				@if (Model.Id > 0)
				{
					<nop-card asp-name="form-field-info"
							  asp-icon="fas fa-info"
							  asp-title="@T("Admin.FormField.Info")"
							  asp-hide-block-attribute-name="@hideFormFieldInfoBlockAttributeName"
							  asp-hide="@hideFormFieldInfoBlock"
							  asp-advanced="false">
						@await Html.PartialAsync("_CreateOrUpdate.FormFieldAddUpdate.Info", Model)
					</nop-card>
				}
			</nop-cards>
		</div>
	</div>
</section>