@model DesignationSearchModel

@{
    //page title
    ViewBag.PageTitle = T("Admin.ContentManagement.Designation").Text;
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName("Designations");
}

<div class="content-header clearfix">
    <h1 class="float-left">
        @T("Admin.ContentManagement.Designation")
    </h1>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="cards-group">

                <div class="card card-default">
                    <div class="card-body">
                        @await Html.PartialAsync("Table", new DataTablesModel
                        {
                            Name = "designation-grid",
                            UrlRead = new DataUrl("List", "Designation", null),
                            UrlUpdate = new DataUrl("DesignationUpdate", "Designation", null),
                            UrlDelete = new DataUrl("DesignationDelete", "Designation", null),
                            Length = Model.PageSize,
                            LengthMenu = Model.AvailablePageSizes,
                            ColumnCollection = new List<ColumnProperty>
                            {
                            new ColumnProperty(nameof(DesignationModel.Name))
                            {
                            Title = T("Admin.Staffs.Designations.Fields.Name").Text,
                            Editable = true,
                            EditType = EditType.String
                            },
                            new ColumnProperty(nameof(DesignationModel.Id))
                            {
                            Title = T("Admin.Common.Edit").Text,
                            Width = "200",
                            ClassName =  NopColumnClassDefaults.Button,
                            Render = new RenderButtonsInlineEdit()
                            },
                            new ColumnProperty(nameof(DesignationModel.Id))
                            {
                            Title = T("Admin.Common.Delete").Text,
                            Width = "100",
                            Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                            ClassName = NopColumnClassDefaults.Button
                            }
                            }
                        })

                        <div class="card card-default">
                            <div class="card-body">
                                <div class="form-group row">
                                    <div class="col-md-3">
                                        <nop-label asp-for="DesignationModel.Name" />
                                    </div>
                                    <div class="col-md-9">
                                        <nop-editor asp-for="DesignationModel.Name" asp-required="true" />
                                        <span asp-validation-for="DesignationModel.Name"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="card-footer">
                                <div class="form-group row">
                                    <div class="col-md-9 offset-md-3">
                                        <button type="button" id="addDesignation" class="btn btn-primary">@T("admin.common.addnew")</button>
                                    </div>
                                </div>
                                <script>
                                    $(document).on('click', '#addDesignation' ,function(){
                                        var name = $('#@Html.IdFor(model => model.DesignationModel.Name)');
                                        if (name.val() === '')
                                        {
                                            $("span[data-valmsg-for='@Html.NameFor(model => model.DesignationModel.Name)']").text("This is required.");
                                            $("span[data-valmsg-for='@Html.NameFor(model => model.DesignationModel.Name)']").addClass("field-validation-error");

                                            return;
                                        }


                                        $('#addDesignation').attr('disabled', true);

                                        var postData = {
                                            Name: name.val()
                                        };

                                        addAntiForgeryToken(postData);

                                        $.ajax({
                                            type: "POST",
                                            url: "@Url.Action("DesignationAdd", "Designation")",
                                            data: postData,
                                            success: function (data, textStatus, jqXHR) {
                                                if(data.success)
                                                {
                                                    updateTable('#designation-grid');

                                                    name.val('');
                                                }
                                                else
                                                {
                                                    alert(data.error);
                                                }
                                            },
                                            error: function (jqXHR, textStatus, errorThrown) {
                                                // Handle error
                                            },
                                            complete: function (jqXHR, textStatus) {
                                                $('#addDesignation').attr('disabled', false);
                                            }
                                        });
                                    })

                                </script>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
